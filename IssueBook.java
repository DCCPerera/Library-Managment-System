/* 
    GROUP MEMBERS

    PS/2017/208
    PS/2017/186
    PS/2017/173
    PS/2017/143
    PS/2017/070

*/
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Yoshitha
 */
public class IssueBook extends javax.swing.JFrame {

    /**
     * Creates new form IssueBook
     */
    public IssueBook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        bnoisuue = new javax.swing.JTextField();
        snoissue = new javax.swing.JTextField();
        issueda = new javax.swing.JTextField();
        Issueb = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Issue Books");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 13, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Serial Number");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 99, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Student Number");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 146, -1, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Issue Date");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 198, 82, -1));
        jPanel1.add(bnoisuue, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 96, 271, -1));
        jPanel1.add(snoissue, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 143, 271, -1));
        jPanel1.add(issueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 195, 271, -1));

        Issueb.setText("Issue");
        Issueb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssuebActionPerformed(evt);
            }
        });
        jPanel1.add(Issueb, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 289, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/WhatsApp Image 2021-02-05 at 13.26.53.jpeg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 610, 400));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
 
    public Scanner y;
    public Scanner stu;
    public String serialNumber;
    public String title;
    public String author;
    public String genre;
    public String placement;
    public int borrowed;
    public String borrower;
    public String dueDate;
    public String userName;
    public String id;
    public String userPass;
    public String email;
    public String changedSerial;
    public String changedTitle;
    public String changedAuthor;
    public String changedGenre;
    public String changedPlacement;
    public String changedBorrower;
    public String changedDate;
    public String bookBorrowed;
    public String updatedID;
    public String updatedUserPass;
    public String updatedEmail;
    public String updatedName;
    public String serialIssue;

    public void AssigningTheBookRecords()
    {
        try {
            y = new Scanner(new File("book.txt"));
        }
        catch (FileNotFoundException e)
        {
            JOptionPane.showMessageDialog(null,"An error occurred");
        }

        while (y.hasNext()) {
            serialNumber = y.next();
            title=y.next();
            author = y.next();
            genre=y.next();
            placement=y.next();
            borrowed=y.nextInt();
            borrower=y.next();
            dueDate=y.next();

            if ( serialNumber.equals(serialIssue))
            {
                changedSerial=serialNumber;
                changedTitle=title;
                changedAuthor=author;
                changedGenre=genre;
                changedPlacement=placement;
                break;
            }
        }
        if(!"NA".equals(borrower))
        {
            JOptionPane.showMessageDialog(null,"The book has already been borrowed. Please check again.");
            System.exit(1);
            // Exit from the rest
        }
        //System.out.println(changedSerial+"\t"+changedTitle+"\t"+changedAuthor+"\t"+changedGenre+"\t"+changedPlacement);

    }


    public void closeFile ()
    {
        y.close();
    }

    public void AssigningTheStudentRecords()
    {
        try {
            stu = new Scanner(new File("student.txt"));
        }
        catch (FileNotFoundException e)
        {
            JOptionPane.showMessageDialog(null,"An error occurred");
        }

        while (stu.hasNext()) {
            id = stu.next();
            userPass=stu.next();
            email = stu.next();
            userName=stu.next();
            bookBorrowed=stu.next();

            if ( id.equals(changedBorrower))
            {
                updatedID=id;
                updatedUserPass=userPass;
                updatedEmail=email;
                updatedName=userName;
                break;
            }
        }
        //System.out.println(updatedID+"\t"+updatedUserPass+"\t"+updatedEmail+"\t"+updatedName);
    if(!"NA".equals(bookBorrowed))
    {
        JOptionPane.showMessageDialog(null,"The student has already borrowed a book.");
        System.exit(1);
        //Exit from the rest
    }
    }
    
    public void closeStuFile ()
    {
        stu.close();
    }

    public void DeleteEntry(String file,String removeTerm)
    {
        try {
            File inputFile = new File(file);
            File tempFile = new File("myTempFile.txt");

            BufferedReader reader = new BufferedReader(new FileReader(inputFile));
            BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile));
            String lineToRemove = removeTerm;
           // System.out.println(removeTerm);
            String currentLine;

            while ((currentLine = reader.readLine()) != null) {
                String trimmedLine = currentLine.trim();
                if (trimmedLine.contains(lineToRemove)) continue;
                writer.write(currentLine + System.getProperty("line.separator"));
            }

            writer.close();
            reader.close();
            boolean del=inputFile.delete();
           // System.out.println(del);
            boolean successful=tempFile.renameTo(inputFile);
        }
        catch (IOException e)
        {
            JOptionPane.showMessageDialog(null,"An error occurred.");
            e.printStackTrace();
        }
    }
    public void reWriteRecord()
    {
        try{
            File file=new File("book.txt");
            FileWriter fileWriter=new FileWriter(file,true);
            fileWriter.write(changedSerial+"\t"+changedTitle+"\t"+changedAuthor+"\t"+changedGenre+"\t"+changedPlacement+"\t"+1+"\t"+changedBorrower+"\t"+changedDate);
            fileWriter.close();}
        catch (IOException e)
        {
            JOptionPane.showMessageDialog(null,"An error occurred.");
            e.printStackTrace();
        }
    }
    public void reWriteStuRecord()
    {
        try{
            File f1=new File("student.txt");
            FileWriter fileWriter=new FileWriter(f1,true);
            fileWriter.write(updatedID+"\t"+updatedUserPass+"\t"+updatedEmail+"\t"+updatedName+"\t"+serialIssue);
            fileWriter.close();}
        catch (IOException e)
        {
            JOptionPane.showMessageDialog(null,"An error occurred.");
            e.printStackTrace();
        }
    }
    
    
    
    
    
  /*  public  String serialNumber;
    private String title;
    private String author;
    private String genre;
    private String placement;
    private int borrowed;
    private String borrower;
    private String dueDate;
    
    public String id;
    public String userPass;
    public String email;
    public String name;
    public int numberOfBorrowedBooks;
    public String booksBorrowed;
    
    public Scanner a;
    public Scanner b;
    String Filepath1 ="Student1.txt";
    String Filepath2 ="book.txt"; 

    
    public void openFile1()
        {
            try {
                    a = new Scanner(new File(Filepath1));
                }
            catch (FileNotFoundException e)
                {
                    JOptionPane.showMessageDialog(null,"File doesn't exist");
                }
        }
    
    public void openFile2()
        {
            try {
                    b = new Scanner(new File(Filepath1));
                }
            catch (FileNotFoundException e)
                {
                    JOptionPane.showMessageDialog(null,"File doesn't exist");
                }
        }
    
    public void updatingDB(String IStuNo,String IBname){
           String tempFile1 = "temp1.txt";
           
           File oldFile = new File(Filepath1);
           File newfile = new File(tempFile1);
           
           try
           {
           FileWriter fw = new FileWriter(tempFile1,true);
           BufferedWriter bw = new BufferedWriter(fw);
           PrintWriter pw = new PrintWriter(bw);
           
           a = new Scanner(new File(Filepath1));
           a.useDelimiter("(,\n)");
                   
                   while(a.hasNext())
                   {
                       id = a.next();
                       userPass= a.next();
                       email=a.next();
                       name = a.next();
                       numberOfBorrowedBooks = a.nextShort();
                       booksBorrowed = a.next();
                       
                       if(id.equals(IStuNo))
                       {
                           pw.println(id + "," + userPass + "," + email + "," + name + "," + numberOfBorrowedBooks + "," + IBname );
                       
                       }
                       else
                       {
                            pw.println(id + "," + userPass + "," + email + "," + name + "," + numberOfBorrowedBooks + "," + booksBorrowed );
                       }
                 
                   
                   }
                   a.close();
                   pw.flush();
                   pw.close();
                   oldFile.delete();
                   File dump = new File(Filepath1);
                   newfile.renameTo(dump);
           }
           catch(Exception e)
                   {
                       JOptionPane.showMessageDialog(null,"Invalid");
                 }   
    }*/
    
    private void IssuebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssuebActionPerformed
        // TODO add your handling code here:
        IssueBook IB=new IssueBook();
        IB.changedBorrower = snoissue.getText();
        IB.serialIssue = bnoisuue.getText();
        //d1.IBname = bnameisuue.getText();
        IB.changedDate = issueda.getText();
        
       // updatingDB(IStuNo,IBname);
            
            IB.AssigningTheBookRecords();
            IB.closeFile();
            IB.DeleteEntry("book.txt",IB.serialIssue);
            IB.reWriteRecord();
            IB.AssigningTheStudentRecords();
            IB.closeStuFile();
            IB.DeleteEntry("student.txt",IB.changedBorrower);
            IB.reWriteStuRecord();
       
       
    }//GEN-LAST:event_IssuebActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold> 
       
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IssueBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Issueb;
    private javax.swing.JTextField bnoisuue;
    private javax.swing.JTextField issueda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField snoissue;
    // End of variables declaration//GEN-END:variables
}










